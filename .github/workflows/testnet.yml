name: Static pages deployment to S3 Testnet

on:
  push:
    branches:
      - testnet

jobs:
  deploy:
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true # fix
      APP_ENV: testnet
      APP_MAINTENANCE_ENABLED: false
      APP_NETWORK_ID: ${{ secrets.APP_NETWORK_ID }}
      APP_FEE_RECIPIENT: ${{ secrets.APP_FEE_RECIPIENT }}
      APP_CHAIN_ID: ${{ secrets.APP_CHAIN_ID }}
      APP_BUGSNAG_KEY: ${{ secrets.APP_BUGSNAG_KEY }}
      APP_BASE_URL: ${{ secrets.APP_STAGING_BASE_URL }}
      APP_NETWORK: ${{ secrets.APP_NETWORK }}
      APP_DEFAULT_ORDER_EXPIRY_SECONDS: ${{ secrets.APP_DEFAULT_ORDER_EXPIRY_SECONDS }}
      APP_AIRDROP_API: ${{ secrets.APP_AIRDROP_API }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_STAGING_BUCKET: ${{ secrets.AWS_S3_STAGING_BUCKET }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      CLOUDFRONT_STAGING_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_STAGING_DISTRIBUTION_ID }}
      SOURCE_DIR: dist
      DEST_DIR: www
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Using Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_AUTH_TOKEN}}" > .npmrc

      - name: Install Dependencies
        run: yarn install

      - name: Building the project
        run: yarn build

      - name: Generating the static pages
        run: yarn generate

      - name: Use AWS CLI
        uses: chrislennon/action-aws-cli@v1.1

      - name: Sync to S3 bucket
        run: aws s3 sync dist/ s3://$AWS_S3_STAGING_BUCKET/www --follow-symlinks --delete --exclude 'static/chart/*'

      - name: Set Cache Headers
        run: aws s3 cp s3://$AWS_S3_STAGING_BUCKET/www s3://$AWS_S3_STAGING_BUCKET/www --exclude "*" --include "*.js" --include "*.css" --include "*.svg" --include "*.woff2" --include "*.woff" --include "*.ttf" --recursive --metadata-directive REPLACE --expires 2034-01-01T00:00:00Z --cache-control max-age=2592000,public

      - name: Invalidate Cloudfront CDN
        run: aws cloudfront create-invalidation --distribution-id=$CLOUDFRONT_STAGING_DISTRIBUTION_ID --paths "/*"
